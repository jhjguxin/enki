var search_data = {"index":{"longSearchIndex":["ability","actioncontroller","actioncontroller::testcase","actioncontroller::verification","actioncontroller::verification::classmethods","actionview","actionview::helpers","actionview::helpers::taghelper","activerecord","activerecord::acts","activerecord::acts::taggable","activerecord::acts::taggable::classmethods","activerecord::acts::taggable::instancemethods","activerecord::acts::taggable::singletonmethods","activesupport","actsastaggablemigration","actsastaggablemigrationgenerator","actsastaggableonsteroidsformtest","actsastaggableonsteroidstest","addindexes","addnametousers","addpapercliptoattachment","admin","admin::basecontroller","admin::commentscontroller","admin::dashboardcontroller","admin::healthcontroller","admin::navigationhelper","admin::pagescontroller","admin::postscontroller","admin::sessionscontroller","admin::undoitemscontroller","applicationcontroller","applicationhelper","archivescontroller","attachment","bevalidhtml5","bevalidxhtml","comment","commentactivity","commentscontroller","coreextensions","coreextensions::object","coreextensions::string","createattachments","datehelper","deletecommentundo","deletepageundo","deletepostundo","devisecreateusers","disableflashsweeping","enki","enki::application","enki::config","enkiformatter","exceptionnotifier","exceptionnotifier::notifier","exceptionnotifier::notifier::missingcontroller","formhelper","gravatarimagetag","gravatarimagetag::classmethods","gravatarimagetag::configuration","gravatarimagetag::instancemethods","initializedb","lesstile","magazine","navigationhelper","navigationhelpers","object","openidauthentication","openidauthentication::result","page","pagetitlehelper","pagescontroller","photo","post","postscontroller","postshelper","removeopenidauthorityfromcomment","specialphoto","specialpost","stats","subscription","tag","taghelper","taglist","taglisttest","tagtest","taggingtest","tagshelper","tagshelpertest","tokenauthenticationscontroller","undofailed","undoitem","urlhelper","user","userhelper","verificationtest","verificationtestcontroller","tag#==()","enki::config#[]()","openidauthentication::result::[]()","page#active?()","activerecord::acts::taggable::classmethods#acts_as_taggable()","taglist#add()","formhelper#admin_form_for()","admin::sessionscontroller#allow_login_bypass?()","comment#apply_filter()","page#apply_filter()","post#apply_filter()","comment#approved?()","pagetitlehelper#archives_title()","openidauthentication#authenticate_with_open_id()","applicationhelper#author()","urlhelper#author_link()","enki::config#author_open_ids()","ability#basic_read_only()","object#be_valid_html5()","object#be_valid_html5_fragment()","object#be_valid_xhtml()","object#be_valid_xhtml_fragment()","comment#blank_openid_fields()","comment::build_for_preview()","page::build_for_preview()","post::build_for_preview()","activerecord::acts::taggable::classmethods#cached_tag_list_column_name()","activerecord::acts::taggable::singletonmethods#caching_tag_list?()","exceptionnotifier#call()","navigationhelper#category_links_for_navigation()","navigationhelper#class_for_tab()","stats#comment_count()","commentactivity#comments()","deletecommentundo#complete_description()","deletepageundo#complete_description()","deletepostundo#complete_description()","gravatarimagetag::configure()","tag#count()","tag::counts()","admin::pagescontroller#create()","admin::postscontroller#create()","commentscontroller#create()","tokenauthenticationscontroller#create()","deletecommentundo::create_undo()","deletepageundo::create_undo()","deletepostundo::create_undo()","enki::config::default()","exceptionnotifier::notifier::default_email_prefix()","exceptionnotifier::notifier::default_exception_recipients()","gravatarimagetag::classmethods#default_gravatar_filetype=()","gravatarimagetag::classmethods#default_gravatar_image=()","gravatarimagetag::classmethods#default_gravatar_rating=()","gravatarimagetag::classmethods#default_gravatar_size=()","exceptionnotifier::default_ignore_exceptions()","enki::config::default_location()","exceptionnotifier::notifier::default_options()","lesstile::default_options()","exceptionnotifier::notifier::default_sections()","exceptionnotifier::notifier::default_sender_address()","admin::postscontroller#delete_empty_attachment()","comment#denormalize()","post#denormalize_comments_count!()","bevalidhtml5#description()","bevalidxhtml#description()","deletecommentundo#description()","deletepageundo#description()","deletepostundo#description()","admin::commentscontroller#destroy()","admin::pagescontroller#destroy()","admin::postscontroller#destroy()","tokenauthenticationscontroller#destroy()","comment#destroy_with_undo()","page#destroy_with_undo()","post#destroy_with_undo()","object#do_delete()","object#do_get()","object#do_post()","object#do_put()","actsastaggablemigration::down()","addindexes::down()","addnametousers::down()","addpapercliptoattachment::down()","createattachments::down()","devisecreateusers::down()","initializedb::down()","removeopenidauthorityfromcomment::down()","applicationcontroller#enki_config()","object#enki_config()","exceptionnotifier::notifier#exception_notification()","object#execute_with_counting()","bevalidhtml5#failure_message()","bevalidxhtml#failure_message()","actsastaggablemigrationgenerator#file_name()","post::find_all_grouped_by_month()","post::find_by_permalink()","admin::commentscontroller#find_comment()","activerecord::acts::taggable::singletonmethods#find_options_for_find_tagged_with()","activerecord::acts::taggable::singletonmethods#find_options_for_tag_counts()","tag::find_or_create_with_like_by_name()","admin::pagescontroller#find_page()","admin::postscontroller#find_post()","commentscontroller#find_post()","comment::find_recent()","commentactivity::find_recent()","post::find_recent()","activerecord::acts::taggable::singletonmethods#find_related_tags()","activerecord::acts::taggable::singletonmethods#find_tagged_with()","lesstile::format_as_html()","enkiformatter::format_as_xhtml()","lesstile::format_as_xhtml()","datehelper#format_comment_date()","applicationhelper#format_comment_error()","datehelper#format_month()","datehelper#format_post_date()","admin::healthcontroller#generate_exception()","page#generate_slug()","post#generate_slug()","gravatarimagetag::instancemethods#gravatar_image_tag()","gravatarimagetag::gravatar_url()","verificationtestcontroller#guarded_by_method()","verificationtestcontroller#guarded_by_not_xhr()","verificationtestcontroller#guarded_by_xhr()","verificationtestcontroller#guarded_in_session()","verificationtestcontroller#guarded_one()","verificationtestcontroller#guarded_one_for_named_route_test()","verificationtestcontroller#guarded_two()","verificationtestcontroller#guarded_with_back()","verificationtestcontroller#guarded_with_flash()","pagetitlehelper#html_title()","gravatarimagetag::included()","admin::commentscontroller#index()","admin::healthcontroller#index()","admin::pagescontroller#index()","admin::postscontroller#index()","admin::undoitemscontroller#index()","archivescontroller#index()","commentscontroller#index()","postscontroller#index()","activerecord::acts::taggable::singletonmethods#joins_for_match_all_tags()","taghelper#linked_tag_list()","deletecommentundo#loaded_data()","deletepageundo#loaded_data()","deletepostundo#loaded_data()","actsastaggablemigrationgenerator#manifest()","bevalidhtml5#matches?()","bevalidxhtml#matches?()","openidauthentication::result#message()","exceptionnotifier::notifier::missingcontroller#method_missing()","post#minor_edit?()","object#mock_post!()","post#month()","postshelper#more_content?()","commentactivity#most_recent_comment()","verificationtestcontroller#multi_one()","verificationtestcontroller#multi_two()","verificationtestcontroller#must_be_post()","admin::navigationhelper#nav_link_to()","bevalidhtml5#negative_failure_message()","bevalidxhtml#negative_failure_message()","ability::new()","admin::pagescontroller#new()","admin::postscontroller#new()","bevalidhtml5::new()","bevalidxhtml::new()","commentactivity::new()","commentscontroller#new()","enki::config::new()","exceptionnotifier::new()","openidauthentication::new()","openidauthentication::result::new()","taglist::new()","comment::new_with_filter()","verificationtestcontroller#no_default_action()","commentscontroller#oldcreate()","applicationhelper#open_id_delegation_link_tags()","comment#open_id_error_should_be_blank()","tag::options_for_counts()","navigationhelper#page_links_for_navigation()","pagetitlehelper#page_title()","navigationhelpers#path_to()","urlhelper#post_comments_path()","stats#post_count()","urlhelper#post_path()","comment#post_title()","pagetitlehelper#post_title()","pagetitlehelper#posts_title()","admin::pagescontroller#preview()","admin::postscontroller#preview()","deletecommentundo#process!()","deletepageundo#process!()","deletepostundo#process!()","undoitem#process!()","comment::protected_attribute?()","post#published?()","navigationhelper#recent_comments_for_navigation()","taglist#remove()","admin::basecontroller#require_login()","comment#requires_openid_authentication?()","activerecord::acts::taggable::instancemethods#save_cached_tag_list()","activerecord::acts::taggable::instancemethods#save_tags()","gravatarimagetag::classmethods#secure_gravatar=()","coreextensions::object#send_with_default()","activerecord::acts::taggable::classmethods#set_cached_tag_list_column_name()","object#set_comment_attributes()","admin::basecontroller#set_content_type()","post#set_dates()","admin::commentscontroller#show()","admin::dashboardcontroller#show()","admin::pagescontroller#show()","admin::postscontroller#show()","pagescontroller#show()","postscontroller#show()","userhelper#show_user()","coreextensions::string#slugorize()","coreextensions::string#slugorize!()","openidauthentication::result#status()","openidauthentication::store()","openidauthentication::store=()","object#stub_open_id_authenticate()","openidauthentication::result#successful?()","admin::sessionscontroller#successful_login()","disableflashsweeping#sweep()","object#tag()","tagshelper#tag_cloud()","stats#tag_count()","activerecord::acts::taggable::instancemethods#tag_counts()","activerecord::acts::taggable::singletonmethods#tag_counts()","activerecord::acts::taggable::instancemethods#tag_list()","activerecord::acts::taggable::instancemethods#tag_list=()","post#tag_list=()","actionview::helpers::taghelper#tag_with_html_patch()","taglisttest#test_add()","taglisttest#test_add_with_parsing()","tagtest#test_all_counts()","tagtest#test_all_counts_with_array_conditions()","tagtest#test_all_counts_with_hash_conditions()","tagtest#test_all_counts_with_string_conditions()","taglisttest#test_alternative_delimiter()","actsastaggableonsteroidstest#test_basic_tag_counts_on_class()","actsastaggableonsteroidstest#test_cached_tag_list_not_used()","actsastaggableonsteroidstest#test_cached_tag_list_updated()","actsastaggableonsteroidstest#test_cached_tag_list_used()","actsastaggableonsteroidstest#test_case_insensitivity()","actsastaggableonsteroidstest#test_change_case_of_tags()","actsastaggableonsteroidstest#test_clear_tag_list_with_nil()","actsastaggableonsteroidstest#test_clear_tag_list_with_string()","actsastaggableonsteroidstest#test_clearing_cached_tag_list()","verificationtest#test_default_failure_should_be_a_bad_request()","taglisttest#test_duplicate_tags_removed()","tagtest#test_equality()","actsastaggableonsteroidstest#test_find_options_for_find_tagged_with_leaves_arguments_unchanged()","actsastaggableonsteroidstest#test_find_options_for_find_tagged_with_no_tags_returns_empty_hash()","actsastaggableonsteroidstest#test_find_options_for_find_tagged_with_respects_custom_table_name()","actsastaggableonsteroidstest#test_find_related_tags_with()","actsastaggableonsteroidstest#test_find_related_tags_with_non_existent_tags()","actsastaggableonsteroidstest#test_find_related_tags_with_nothing()","actsastaggableonsteroidstest#test_find_tagged_with()","actsastaggableonsteroidstest#test_find_tagged_with_conditions()","actsastaggableonsteroidstest#test_find_tagged_with_duplicates_options_hash()","actsastaggableonsteroidstest#test_find_tagged_with_exclusions()","actsastaggableonsteroidstest#test_find_tagged_with_include_and_order()","actsastaggableonsteroidstest#test_find_tagged_with_match_all()","actsastaggableonsteroidstest#test_find_tagged_with_match_all_and_include()","actsastaggableonsteroidstest#test_find_tagged_with_nonexistant_tags()","actsastaggableonsteroidstest#test_find_tagged_with_nothing()","actsastaggableonsteroidstest#test_find_tagged_with_using_sti()","taglisttest#test_from_and_new_treat_both_accept_arrays()","taglisttest#test_from_blank()","taglisttest#test_from_leaves_string_unchanged()","taglisttest#test_from_multiple_tags()","taglisttest#test_from_multiple_tags_with_quote_and_commas()","taglisttest#test_from_multiple_tags_with_quotes()","taglisttest#test_from_removes_white_space()","taglisttest#test_from_single_name()","taglisttest#test_from_single_quoted_tag()","taglisttest#test_from_with_inner_quotes()","taglisttest#test_from_with_single_quotes()","verificationtest#test_guarded_by_method_with_prereqs()","verificationtest#test_guarded_by_method_without_prereqs()","verificationtest#test_guarded_by_not_xhr_with_prereqs()","verificationtest#test_guarded_by_not_xhr_without_prereqs()","verificationtest#test_guarded_by_xhr_with_prereqs()","verificationtest#test_guarded_by_xhr_without_prereqs()","verificationtest#test_guarded_in_session_with_prereqs()","verificationtest#test_guarded_in_session_without_prereqs()","verificationtest#test_guarded_one_with_prereqs()","verificationtest#test_guarded_one_without_prereqs()","verificationtest#test_guarded_post_and_calls_render_fails_and_sets_allow_header()","verificationtest#test_guarded_post_and_calls_render_succeeds()","verificationtest#test_guarded_two_with_prereqs()","verificationtest#test_guarded_two_without_prereqs_both()","verificationtest#test_guarded_two_without_prereqs_one()","verificationtest#test_guarded_two_without_prereqs_two()","verificationtest#test_guarded_with_flash_with_prereqs()","verificationtest#test_guarded_with_flash_without_prereqs()","actsastaggableonsteroidstest#test_include_tags_on_find_tagged_with()","actsastaggableonsteroidstest#test_instance_tag_counts()","verificationtest#test_multi_one_with_prereqs()","verificationtest#test_multi_one_without_prereqs()","verificationtest#test_multi_two_with_prereqs()","verificationtest#test_multi_two_without_prereqs()","tagtest#test_name_required()","tagtest#test_name_unique()","actsastaggableonsteroidstest#test_new_tags()","taglisttest#test_new_with_parsing()","verificationtest#test_no_deprecation_warning_for_named_route()","actsastaggableonsteroidstest#test_reassign_tag_list()","taglisttest#test_remove()","actsastaggableonsteroidstest#test_remove_and_add_tag()","actsastaggableonsteroidstest#test_remove_tag()","taglisttest#test_remove_with_parsing()","verificationtest#test_second_redirect()","taglisttest#test_spaces_do_not_delineate()","taggingtest#test_tag()","tagshelpertest#test_tag_cloud()","tagshelpertest#test_tag_cloud_when_no_tags()","actsastaggableonsteroidstest#test_tag_counts_duplicates_options_hash()","actsastaggableonsteroidstest#test_tag_counts_on_association()","actsastaggableonsteroidstest#test_tag_counts_on_association_with_options()","actsastaggableonsteroidstest#test_tag_counts_on_class_with_date_conditions()","actsastaggableonsteroidstest#test_tag_counts_on_class_with_frequencies()","actsastaggableonsteroidstest#test_tag_counts_on_class_with_frequencies_and_conditions()","actsastaggableonsteroidstest#test_tag_counts_on_has_many_through()","actsastaggableonsteroidstest#test_tag_counts_on_model_instance()","actsastaggableonsteroidstest#test_tag_counts_on_model_instance_merges_conditions()","actsastaggableonsteroidstest#test_tag_counts_on_model_instance_with_no_tags()","actsastaggableonsteroidstest#test_tag_counts_respects_custom_table_names()","actsastaggableonsteroidstest#test_tag_counts_should_sanitize_scope_conditions()","actsastaggableonsteroidstest#test_tag_counts_using_sti()","actsastaggableonsteroidstest#test_tag_counts_with_limit()","actsastaggableonsteroidstest#test_tag_counts_with_limit_and_order()","actsastaggableonsteroidstest#test_tag_destroyed_when_unused()","actsastaggableonsteroidstest#test_tag_list_accessors_on_new_record()","actsastaggableonsteroidsformtest#test_tag_list_contents()","actsastaggableonsteroidstest#test_tag_list_populated_when_cache_nil()","actsastaggableonsteroidstest#test_tag_list_reader()","actsastaggableonsteroidstest#test_tag_list_reset_on_reload()","actsastaggableonsteroidstest#test_tag_not_destroyed_when_unused()","taggingtest#test_taggable()","tagtest#test_taggings()","tagtest#test_taggings_removed_when_tag_destroyed()","actsastaggableonsteroidstest#test_tags_not_saved_if_validation_fails()","tagtest#test_to_s()","taglisttest#test_to_s_with_alternative_delimiter()","taglisttest#test_to_s_with_commas()","taglisttest#test_toggle()","verificationtest#test_unguarded_with_params()","verificationtest#test_unguarded_without_params()","verificationtest#test_using_symbol_back_redirects_to_referrer()","verificationtest#test_using_symbol_back_with_no_referrer()","tag#to_s()","taglist#to_s()","taglist#toggle()","comment#trusted_user?()","verificationtestcontroller#two_redirects()","verificationtestcontroller#unconditional_redirect()","admin::undoitemscontroller#undo()","verificationtestcontroller#unguarded()","openidauthentication::result#unsuccessful?()","actsastaggablemigration::up()","addindexes::up()","addnametousers::up()","addpapercliptoattachment::up()","createattachments::up()","devisecreateusers::up()","initializedb::up()","removeopenidauthorityfromcomment::up()","admin::commentscontroller#update()","admin::pagescontroller#update()","admin::postscontroller#update()","comment#user_logged_in?()","openidauthentication#using_open_id?()","object#valid_comment_attributes()","object#valid_page_attributes()","object#valid_post_attributes()","post#validate_published_at_natural()","actioncontroller::verification::classmethods#verify()","commentscontroller#verify_authenticity_token_unless_openid()","bevalidhtml5#wrap_with_html5_header()","bevalidxhtml#wrap_with_xhtml_header()","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Ability","","Ability.html","","<p>Define abilities for the passed in user here. For example:\n<p>user ||= User.new # guest user (not logged …\n"],["ActionController","","ActionController.html","",""],["ActionController::TestCase","","ActionController/TestCase.html","",""],["ActionController::Verification","","ActionController/Verification.html","",""],["ActionController::Verification::ClassMethods","","ActionController/Verification/ClassMethods.html","","<p>This module provides a class-level method for specifying that certain\nactions are guarded against being …\n"],["ActionView","","ActionView.html","",""],["ActionView::Helpers","","ActionView/Helpers.html","",""],["ActionView::Helpers::TagHelper","","ActionView/Helpers/TagHelper.html","","<p>TagHelper will output HTML tags as opposed to self-closed XHTML tags.\nShouldn’t be needed for Rails &gt;= …\n"],["ActiveRecord","","ActiveRecord.html","",""],["ActiveRecord::Acts","","ActiveRecord/Acts.html","",""],["ActiveRecord::Acts::Taggable","","ActiveRecord/Acts/Taggable.html","",""],["ActiveRecord::Acts::Taggable::ClassMethods","","ActiveRecord/Acts/Taggable/ClassMethods.html","",""],["ActiveRecord::Acts::Taggable::InstanceMethods","","ActiveRecord/Acts/Taggable/InstanceMethods.html","",""],["ActiveRecord::Acts::Taggable::SingletonMethods","","ActiveRecord/Acts/Taggable/SingletonMethods.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["ActsAsTaggableMigration","","ActsAsTaggableMigration.html","",""],["ActsAsTaggableMigrationGenerator","","ActsAsTaggableMigrationGenerator.html","",""],["ActsAsTaggableOnSteroidsFormTest","","ActsAsTaggableOnSteroidsFormTest.html","",""],["ActsAsTaggableOnSteroidsTest","","ActsAsTaggableOnSteroidsTest.html","",""],["AddIndexes","","AddIndexes.html","",""],["AddNameToUsers","","AddNameToUsers.html","",""],["AddPaperclipToAttachment","","AddPaperclipToAttachment.html","",""],["Admin","","Admin.html","",""],["Admin::BaseController","","Admin/BaseController.html","",""],["Admin::CommentsController","","Admin/CommentsController.html","",""],["Admin::DashboardController","","Admin/DashboardController.html","",""],["Admin::HealthController","","Admin/HealthController.html","",""],["Admin::NavigationHelper","","Admin/NavigationHelper.html","",""],["Admin::PagesController","","Admin/PagesController.html","",""],["Admin::PostsController","","Admin/PostsController.html","",""],["Admin::SessionsController","","Admin/SessionsController.html","",""],["Admin::UndoItemsController","","Admin/UndoItemsController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ArchivesController","","ArchivesController.html","",""],["Attachment","","Attachment.html","",""],["BeValidHtml5","","BeValidHtml5.html","",""],["BeValidXhtml","","BeValidXhtml.html","","<p>Paste me into spec_helper.rb, or save me somewhere else and require me in.\n"],["Comment","","Comment.html","",""],["CommentActivity","","CommentActivity.html","",""],["CommentsController","","CommentsController.html","",""],["CoreExtensions","","CoreExtensions.html","",""],["CoreExtensions::Object","","CoreExtensions/Object.html","",""],["CoreExtensions::String","","CoreExtensions/String.html","",""],["CreateAttachments","","CreateAttachments.html","",""],["DateHelper","","DateHelper.html","",""],["DeleteCommentUndo","","DeleteCommentUndo.html","",""],["DeletePageUndo","","DeletePageUndo.html","",""],["DeletePostUndo","","DeletePostUndo.html","",""],["DeviseCreateUsers","","DeviseCreateUsers.html","",""],["DisableFlashSweeping","","DisableFlashSweeping.html","",""],["Enki","","Enki.html","",""],["Enki::Application","","Enki/Application.html","",""],["Enki::Config","","Enki/Config.html","",""],["EnkiFormatter","","EnkiFormatter.html","",""],["ExceptionNotifier","","ExceptionNotifier.html","",""],["ExceptionNotifier::Notifier","","ExceptionNotifier/Notifier.html","",""],["ExceptionNotifier::Notifier::MissingController","","ExceptionNotifier/Notifier/MissingController.html","",""],["FormHelper","","FormHelper.html","",""],["GravatarImageTag","","GravatarImageTag.html","",""],["GravatarImageTag::ClassMethods","","GravatarImageTag/ClassMethods.html","",""],["GravatarImageTag::Configuration","","GravatarImageTag/Configuration.html","",""],["GravatarImageTag::InstanceMethods","","GravatarImageTag/InstanceMethods.html","",""],["InitializeDb","","InitializeDb.html","",""],["Lesstile","","Lesstile.html","",""],["Magazine","","Magazine.html","",""],["NavigationHelper","","NavigationHelper.html","",""],["NavigationHelpers","","NavigationHelpers.html","",""],["Object","","Object.html","",""],["OpenIdAuthentication","","OpenIdAuthentication.html","",""],["OpenIdAuthentication::Result","","OpenIdAuthentication/Result.html","",""],["Page","","Page.html","",""],["PageTitleHelper","","PageTitleHelper.html","",""],["PagesController","","PagesController.html","",""],["Photo","","Photo.html","",""],["Post","","Post.html","",""],["PostsController","","PostsController.html","",""],["PostsHelper","","PostsHelper.html","",""],["RemoveOpenidAuthorityFromComment","","RemoveOpenidAuthorityFromComment.html","",""],["SpecialPhoto","","SpecialPhoto.html","",""],["SpecialPost","","SpecialPost.html","",""],["Stats","","Stats.html","",""],["Subscription","","Subscription.html","",""],["Tag","","Tag.html","",""],["TagHelper","","TagHelper.html","",""],["TagList","","TagList.html","",""],["TagListTest","","TagListTest.html","",""],["TagTest","","TagTest.html","",""],["TaggingTest","","TaggingTest.html","",""],["TagsHelper","","TagsHelper.html","",""],["TagsHelperTest","","TagsHelperTest.html","",""],["TokenAuthenticationsController","","TokenAuthenticationsController.html","",""],["UndoFailed","","UndoFailed.html","",""],["UndoItem","","UndoItem.html","",""],["UrlHelper","","UrlHelper.html","",""],["User","","User.html","",""],["UserHelper","","UserHelper.html","",""],["VerificationTest","","VerificationTest.html","",""],["VerificationTestController","","VerificationTestController.html","",""],["==","Tag","Tag.html#method-i-3D-3D","(object)",""],["[]","Enki::Config","Enki/Config.html#method-i-5B-5D","(*path)",""],["[]","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-c-5B-5D","(code)",""],["active?","Page","Page.html#method-i-active-3F","()",""],["acts_as_taggable","ActiveRecord::Acts::Taggable::ClassMethods","ActiveRecord/Acts/Taggable/ClassMethods.html#method-i-acts_as_taggable","()",""],["add","TagList","TagList.html#method-i-add","(*names)","<p>Add tags to the tag_list. Duplicate or blank tags will be ignored.\n\n<pre>tag_list.add(&quot;Fun&quot;, &quot;Happy&quot;)</pre>\n<p>Use the …\n"],["admin_form_for","FormHelper","FormHelper.html#method-i-admin_form_for","(object, &p)",""],["allow_login_bypass?","Admin::SessionsController","Admin/SessionsController.html#method-i-allow_login_bypass-3F","()",""],["apply_filter","Comment","Comment.html#method-i-apply_filter","()",""],["apply_filter","Page","Page.html#method-i-apply_filter","()",""],["apply_filter","Post","Post.html#method-i-apply_filter","()",""],["approved?","Comment","Comment.html#method-i-approved-3F","()",""],["archives_title","PageTitleHelper","PageTitleHelper.html#method-i-archives_title","()",""],["authenticate_with_open_id","OpenIdAuthentication","OpenIdAuthentication.html#method-i-authenticate_with_open_id","(identifier = nil, options = {}, &block)",""],["author","ApplicationHelper","ApplicationHelper.html#method-i-author","()",""],["author_link","UrlHelper","UrlHelper.html#method-i-author_link","(comment,options = {})",""],["author_open_ids","Enki::Config","Enki/Config.html#method-i-author_open_ids","()",""],["basic_read_only","Ability","Ability.html#method-i-basic_read_only","()",""],["be_valid_html5","Object","Object.html#method-i-be_valid_html5","()",""],["be_valid_html5_fragment","Object","Object.html#method-i-be_valid_html5_fragment","()",""],["be_valid_xhtml","Object","Object.html#method-i-be_valid_xhtml","()",""],["be_valid_xhtml_fragment","Object","Object.html#method-i-be_valid_xhtml_fragment","()",""],["blank_openid_fields","Comment","Comment.html#method-i-blank_openid_fields","()",""],["build_for_preview","Comment","Comment.html#method-c-build_for_preview","(params)",""],["build_for_preview","Page","Page.html#method-c-build_for_preview","(params)",""],["build_for_preview","Post","Post.html#method-c-build_for_preview","(params)",""],["cached_tag_list_column_name","ActiveRecord::Acts::Taggable::ClassMethods","ActiveRecord/Acts/Taggable/ClassMethods.html#method-i-cached_tag_list_column_name","()",""],["caching_tag_list?","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-caching_tag_list-3F","()",""],["call","ExceptionNotifier","ExceptionNotifier.html#method-i-call","(env)",""],["category_links_for_navigation","NavigationHelper","NavigationHelper.html#method-i-category_links_for_navigation","()",""],["class_for_tab","NavigationHelper","NavigationHelper.html#method-i-class_for_tab","(tab_name, index)",""],["comment_count","Stats","Stats.html#method-i-comment_count","()",""],["comments","CommentActivity","CommentActivity.html#method-i-comments","()",""],["complete_description","DeleteCommentUndo","DeleteCommentUndo.html#method-i-complete_description","()",""],["complete_description","DeletePageUndo","DeletePageUndo.html#method-i-complete_description","()",""],["complete_description","DeletePostUndo","DeletePostUndo.html#method-i-complete_description","()",""],["configure","GravatarImageTag","GravatarImageTag.html#method-c-configure","()",""],["count","Tag","Tag.html#method-i-count","()",""],["counts","Tag","Tag.html#method-c-counts","(options = {})","<p>Calculate the tag counts for all tags.\n\n<pre>:start_at - Restrict the tags to those created after a certain ...</pre>\n"],["create","Admin::PagesController","Admin/PagesController.html#method-i-create","()",""],["create","Admin::PostsController","Admin/PostsController.html#method-i-create","()",""],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","TokenAuthenticationsController","TokenAuthenticationsController.html#method-i-create","()",""],["create_undo","DeleteCommentUndo","DeleteCommentUndo.html#method-c-create_undo","(comment)",""],["create_undo","DeletePageUndo","DeletePageUndo.html#method-c-create_undo","(page)",""],["create_undo","DeletePostUndo","DeletePostUndo.html#method-c-create_undo","(post)",""],["default","Enki::Config","Enki/Config.html#method-c-default","()",""],["default_email_prefix","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-c-default_email_prefix","()",""],["default_exception_recipients","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-c-default_exception_recipients","()",""],["default_gravatar_filetype=","GravatarImageTag::ClassMethods","GravatarImageTag/ClassMethods.html#method-i-default_gravatar_filetype-3D","(value)",""],["default_gravatar_image=","GravatarImageTag::ClassMethods","GravatarImageTag/ClassMethods.html#method-i-default_gravatar_image-3D","(value)",""],["default_gravatar_rating=","GravatarImageTag::ClassMethods","GravatarImageTag/ClassMethods.html#method-i-default_gravatar_rating-3D","(value)",""],["default_gravatar_size=","GravatarImageTag::ClassMethods","GravatarImageTag/ClassMethods.html#method-i-default_gravatar_size-3D","(value)",""],["default_ignore_exceptions","ExceptionNotifier","ExceptionNotifier.html#method-c-default_ignore_exceptions","()",""],["default_location","Enki::Config","Enki/Config.html#method-c-default_location","()",""],["default_options","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-c-default_options","()",""],["default_options","Lesstile","Lesstile.html#method-c-default_options","()",""],["default_sections","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-c-default_sections","()",""],["default_sender_address","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-c-default_sender_address","()",""],["delete_empty_attachment","Admin::PostsController","Admin/PostsController.html#method-i-delete_empty_attachment","()",""],["denormalize","Comment","Comment.html#method-i-denormalize","()",""],["denormalize_comments_count!","Post","Post.html#method-i-denormalize_comments_count-21","()",""],["description","BeValidHtml5","BeValidHtml5.html#method-i-description","()",""],["description","BeValidXhtml","BeValidXhtml.html#method-i-description","()",""],["description","DeleteCommentUndo","DeleteCommentUndo.html#method-i-description","()",""],["description","DeletePageUndo","DeletePageUndo.html#method-i-description","()",""],["description","DeletePostUndo","DeletePostUndo.html#method-i-description","()",""],["destroy","Admin::CommentsController","Admin/CommentsController.html#method-i-destroy","()",""],["destroy","Admin::PagesController","Admin/PagesController.html#method-i-destroy","()",""],["destroy","Admin::PostsController","Admin/PostsController.html#method-i-destroy","()",""],["destroy","TokenAuthenticationsController","TokenAuthenticationsController.html#method-i-destroy","()",""],["destroy_with_undo","Comment","Comment.html#method-i-destroy_with_undo","()",""],["destroy_with_undo","Page","Page.html#method-i-destroy_with_undo","()",""],["destroy_with_undo","Post","Post.html#method-i-destroy_with_undo","()",""],["do_delete","Object","Object.html#method-i-do_delete","()",""],["do_get","Object","Object.html#method-i-do_get","()",""],["do_post","Object","Object.html#method-i-do_post","()",""],["do_put","Object","Object.html#method-i-do_put","()",""],["down","ActsAsTaggableMigration","ActsAsTaggableMigration.html#method-c-down","()",""],["down","AddIndexes","AddIndexes.html#method-c-down","()",""],["down","AddNameToUsers","AddNameToUsers.html#method-c-down","()",""],["down","AddPaperclipToAttachment","AddPaperclipToAttachment.html#method-c-down","()",""],["down","CreateAttachments","CreateAttachments.html#method-c-down","()",""],["down","DeviseCreateUsers","DeviseCreateUsers.html#method-c-down","()",""],["down","InitializeDb","InitializeDb.html#method-c-down","()",""],["down","RemoveOpenidAuthorityFromComment","RemoveOpenidAuthorityFromComment.html#method-c-down","()",""],["enki_config","ApplicationController","ApplicationController.html#method-i-enki_config","()",""],["enki_config","Object","Object.html#method-i-enki_config","()",""],["exception_notification","ExceptionNotifier::Notifier","ExceptionNotifier/Notifier.html#method-i-exception_notification","(env, exception)",""],["execute_with_counting","Object","Object.html#method-i-execute_with_counting","(sql, name = nil, &block)",""],["failure_message","BeValidHtml5","BeValidHtml5.html#method-i-failure_message","()",""],["failure_message","BeValidXhtml","BeValidXhtml.html#method-i-failure_message","()",""],["file_name","ActsAsTaggableMigrationGenerator","ActsAsTaggableMigrationGenerator.html#method-i-file_name","()",""],["find_all_grouped_by_month","Post","Post.html#method-c-find_all_grouped_by_month","()",""],["find_by_permalink","Post","Post.html#method-c-find_by_permalink","(year, month, day, slug, options = {})",""],["find_comment","Admin::CommentsController","Admin/CommentsController.html#method-i-find_comment","()",""],["find_options_for_find_tagged_with","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-find_options_for_find_tagged_with","(tags, options = {})",""],["find_options_for_tag_counts","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-find_options_for_tag_counts","(options = {})",""],["find_or_create_with_like_by_name","Tag","Tag.html#method-c-find_or_create_with_like_by_name","(name)","<p>LIKE is used for cross-database case-insensitivity\n"],["find_page","Admin::PagesController","Admin/PagesController.html#method-i-find_page","()",""],["find_post","Admin::PostsController","Admin/PostsController.html#method-i-find_post","()",""],["find_post","CommentsController","CommentsController.html#method-i-find_post","()",""],["find_recent","Comment","Comment.html#method-c-find_recent","(options = {})",""],["find_recent","CommentActivity","CommentActivity.html#method-c-find_recent","()",""],["find_recent","Post","Post.html#method-c-find_recent","(options = {})",""],["find_related_tags","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-find_related_tags","(tags, options = {})","<p>Returns an array of related tags. Related tags are all the other tags that\nare found on the models tagged …\n"],["find_tagged_with","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-find_tagged_with","(*args)","<p>Pass either a tag, string, or an array of strings or tags.\n<p>Options:\n\n<pre>:exclude - Find models that are not ...</pre>\n"],["format_as_html","Lesstile","Lesstile.html#method-c-format_as_html","(text, options = {})","<p>Returns lesstile formatted text as valid HTML5\n<p>options (all optional):\n<p><code>text_formatter</code>: A callback function …\n"],["format_as_xhtml","EnkiFormatter","EnkiFormatter.html#method-c-format_as_xhtml","(text)",""],["format_as_xhtml","Lesstile","Lesstile.html#method-c-format_as_xhtml","(text, options = {})","<p>Returns lesstile formatted text as valid XHTML\n<p>options (all optional):\n<p><code>text_formatter</code>: A callback function …\n"],["format_comment_date","DateHelper","DateHelper.html#method-i-format_comment_date","(date)",""],["format_comment_error","ApplicationHelper","ApplicationHelper.html#method-i-format_comment_error","(error)",""],["format_month","DateHelper","DateHelper.html#method-i-format_month","(date)",""],["format_post_date","DateHelper","DateHelper.html#method-i-format_post_date","(date)",""],["generate_exception","Admin::HealthController","Admin/HealthController.html#method-i-generate_exception","()",""],["generate_slug","Page","Page.html#method-i-generate_slug","()",""],["generate_slug","Post","Post.html#method-i-generate_slug","()",""],["gravatar_image_tag","GravatarImageTag::InstanceMethods","GravatarImageTag/InstanceMethods.html#method-i-gravatar_image_tag","(email, options = {})",""],["gravatar_url","GravatarImageTag","GravatarImageTag.html#method-c-gravatar_url","(email, overrides = {})",""],["guarded_by_method","VerificationTestController","VerificationTestController.html#method-i-guarded_by_method","()",""],["guarded_by_not_xhr","VerificationTestController","VerificationTestController.html#method-i-guarded_by_not_xhr","()",""],["guarded_by_xhr","VerificationTestController","VerificationTestController.html#method-i-guarded_by_xhr","()",""],["guarded_in_session","VerificationTestController","VerificationTestController.html#method-i-guarded_in_session","()",""],["guarded_one","VerificationTestController","VerificationTestController.html#method-i-guarded_one","()",""],["guarded_one_for_named_route_test","VerificationTestController","VerificationTestController.html#method-i-guarded_one_for_named_route_test","()",""],["guarded_two","VerificationTestController","VerificationTestController.html#method-i-guarded_two","()",""],["guarded_with_back","VerificationTestController","VerificationTestController.html#method-i-guarded_with_back","()",""],["guarded_with_flash","VerificationTestController","VerificationTestController.html#method-i-guarded_with_flash","()",""],["html_title","PageTitleHelper","PageTitleHelper.html#method-i-html_title","(content)",""],["included","GravatarImageTag","GravatarImageTag.html#method-c-included","(base)",""],["index","Admin::CommentsController","Admin/CommentsController.html#method-i-index","()",""],["index","Admin::HealthController","Admin/HealthController.html#method-i-index","()",""],["index","Admin::PagesController","Admin/PagesController.html#method-i-index","()",""],["index","Admin::PostsController","Admin/PostsController.html#method-i-index","()",""],["index","Admin::UndoItemsController","Admin/UndoItemsController.html#method-i-index","()",""],["index","ArchivesController","ArchivesController.html#method-i-index","()",""],["index","CommentsController","CommentsController.html#method-i-index","()",""],["index","PostsController","PostsController.html#method-i-index","()",""],["joins_for_match_all_tags","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-joins_for_match_all_tags","(tags)",""],["linked_tag_list","TagHelper","TagHelper.html#method-i-linked_tag_list","(tags)",""],["loaded_data","DeleteCommentUndo","DeleteCommentUndo.html#method-i-loaded_data","()",""],["loaded_data","DeletePageUndo","DeletePageUndo.html#method-i-loaded_data","()",""],["loaded_data","DeletePostUndo","DeletePostUndo.html#method-i-loaded_data","()",""],["manifest","ActsAsTaggableMigrationGenerator","ActsAsTaggableMigrationGenerator.html#method-i-manifest","()",""],["matches?","BeValidHtml5","BeValidHtml5.html#method-i-matches-3F","(rendered)",""],["matches?","BeValidXhtml","BeValidXhtml.html#method-i-matches-3F","(rendered)",""],["message","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-i-message","()",""],["method_missing","ExceptionNotifier::Notifier::MissingController","ExceptionNotifier/Notifier/MissingController.html#method-i-method_missing","(*args, &block)",""],["minor_edit?","Post","Post.html#method-i-minor_edit-3F","()",""],["mock_post!","Object","Object.html#method-i-mock_post-21","()",""],["month","Post","Post.html#method-i-month","()",""],["more_content?","PostsHelper","PostsHelper.html#method-i-more_content-3F","()","<p>This isn’t strictly correct, but it’s a pretty good guess and saves\nanother hit to the DB\n"],["most_recent_comment","CommentActivity","CommentActivity.html#method-i-most_recent_comment","()",""],["multi_one","VerificationTestController","VerificationTestController.html#method-i-multi_one","()",""],["multi_two","VerificationTestController","VerificationTestController.html#method-i-multi_two","()",""],["must_be_post","VerificationTestController","VerificationTestController.html#method-i-must_be_post","()",""],["nav_link_to","Admin::NavigationHelper","Admin/NavigationHelper.html#method-i-nav_link_to","(text, url, options)",""],["negative_failure_message","BeValidHtml5","BeValidHtml5.html#method-i-negative_failure_message","()",""],["negative_failure_message","BeValidXhtml","BeValidXhtml.html#method-i-negative_failure_message","()",""],["new","Ability","Ability.html#method-c-new","(user)",""],["new","Admin::PagesController","Admin/PagesController.html#method-i-new","()",""],["new","Admin::PostsController","Admin/PostsController.html#method-i-new","()",""],["new","BeValidHtml5","BeValidHtml5.html#method-c-new","(base, options)",""],["new","BeValidXhtml","BeValidXhtml.html#method-c-new","(options)",""],["new","CommentActivity","CommentActivity.html#method-c-new","(post)",""],["new","CommentsController","CommentsController.html#method-i-new","()",""],["new","Enki::Config","Enki/Config.html#method-c-new","(file_name)",""],["new","ExceptionNotifier","ExceptionNotifier.html#method-c-new","(app, options = {})",""],["new","OpenIdAuthentication","OpenIdAuthentication.html#method-c-new","(app)",""],["new","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-c-new","(code)",""],["new","TagList","TagList.html#method-c-new","(*args)",""],["new_with_filter","Comment","Comment.html#method-c-new_with_filter","(params)",""],["no_default_action","VerificationTestController","VerificationTestController.html#method-i-no_default_action","()",""],["oldcreate","CommentsController","CommentsController.html#method-i-oldcreate","()","<p>TODO: Spec OpenID with cucumber and rack-my-id\n"],["open_id_delegation_link_tags","ApplicationHelper","ApplicationHelper.html#method-i-open_id_delegation_link_tags","(server, delegate)",""],["open_id_error_should_be_blank","Comment","Comment.html#method-i-open_id_error_should_be_blank","()",""],["options_for_counts","Tag","Tag.html#method-c-options_for_counts","(options = {})",""],["page_links_for_navigation","NavigationHelper","NavigationHelper.html#method-i-page_links_for_navigation","()",""],["page_title","PageTitleHelper","PageTitleHelper.html#method-i-page_title","(page)",""],["path_to","NavigationHelpers","NavigationHelpers.html#method-i-path_to","(page_name)","<p>Maps a name to a path. Used by the\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">When</span> <span class=\"ruby-regexp\">%r^I go to (.+)$/</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">page_name</span><span class=\"ruby-operator\">|</span>\n</pre>\n<p>step definition in web_steps.rb …\n"],["post_comments_path","UrlHelper","UrlHelper.html#method-i-post_comments_path","(post)",""],["post_count","Stats","Stats.html#method-i-post_count","()",""],["post_path","UrlHelper","UrlHelper.html#method-i-post_path","(post, options = {})",""],["post_title","Comment","Comment.html#method-i-post_title","()","<p>Delegates\n"],["post_title","PageTitleHelper","PageTitleHelper.html#method-i-post_title","(post)",""],["posts_title","PageTitleHelper","PageTitleHelper.html#method-i-posts_title","(tag)",""],["preview","Admin::PagesController","Admin/PagesController.html#method-i-preview","()",""],["preview","Admin::PostsController","Admin/PostsController.html#method-i-preview","()",""],["process!","DeleteCommentUndo","DeleteCommentUndo.html#method-i-process-21","()",""],["process!","DeletePageUndo","DeletePageUndo.html#method-i-process-21","()",""],["process!","DeletePostUndo","DeletePostUndo.html#method-i-process-21","()",""],["process!","UndoItem","UndoItem.html#method-i-process-21","()",""],["protected_attribute?","Comment","Comment.html#method-c-protected_attribute-3F","(attribute)",""],["published?","Post","Post.html#method-i-published-3F","()",""],["recent_comments_for_navigation","NavigationHelper","NavigationHelper.html#method-i-recent_comments_for_navigation","()",""],["remove","TagList","TagList.html#method-i-remove","(*names)","<p>Remove specific tags from the tag_list.\n\n<pre>tag_list.remove(&quot;Sad&quot;, &quot;Lonely&quot;)</pre>\n<p>Like #add, the <code>:parse</code> option can …\n"],["require_login","Admin::BaseController","Admin/BaseController.html#method-i-require_login","()",""],["requires_openid_authentication?","Comment","Comment.html#method-i-requires_openid_authentication-3F","()",""],["save_cached_tag_list","ActiveRecord::Acts::Taggable::InstanceMethods","ActiveRecord/Acts/Taggable/InstanceMethods.html#method-i-save_cached_tag_list","()",""],["save_tags","ActiveRecord::Acts::Taggable::InstanceMethods","ActiveRecord/Acts/Taggable/InstanceMethods.html#method-i-save_tags","()",""],["secure_gravatar=","GravatarImageTag::ClassMethods","GravatarImageTag/ClassMethods.html#method-i-secure_gravatar-3D","(value)",""],["send_with_default","CoreExtensions::Object","CoreExtensions/Object.html#method-i-send_with_default","(method, default = nil, *args)",""],["set_cached_tag_list_column_name","ActiveRecord::Acts::Taggable::ClassMethods","ActiveRecord/Acts/Taggable/ClassMethods.html#method-i-set_cached_tag_list_column_name","(value = nil, &block)",""],["set_comment_attributes","Object","Object.html#method-i-set_comment_attributes","(comment, extra = {})",""],["set_content_type","Admin::BaseController","Admin/BaseController.html#method-i-set_content_type","()",""],["set_dates","Post","Post.html#method-i-set_dates","()",""],["show","Admin::CommentsController","Admin/CommentsController.html#method-i-show","()",""],["show","Admin::DashboardController","Admin/DashboardController.html#method-i-show","()",""],["show","Admin::PagesController","Admin/PagesController.html#method-i-show","()",""],["show","Admin::PostsController","Admin/PostsController.html#method-i-show","()",""],["show","PagesController","PagesController.html#method-i-show","()",""],["show","PostsController","PostsController.html#method-i-show","()",""],["show_user","UserHelper","UserHelper.html#method-i-show_user","(user)",""],["slugorize","CoreExtensions::String","CoreExtensions/String.html#method-i-slugorize","()",""],["slugorize!","CoreExtensions::String","CoreExtensions/String.html#method-i-slugorize-21","()",""],["status","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-i-status","()",""],["store","OpenIdAuthentication","OpenIdAuthentication.html#method-c-store","()",""],["store=","OpenIdAuthentication","OpenIdAuthentication.html#method-c-store-3D","(*store_option)",""],["stub_open_id_authenticate","Object","Object.html#method-i-stub_open_id_authenticate","(url, status_code, return_value)",""],["successful?","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-i-successful-3F","()",""],["successful_login","Admin::SessionsController","Admin/SessionsController.html#method-i-successful_login","()","<p>before_filter :authenticate_user!\n"],["sweep","DisableFlashSweeping","DisableFlashSweeping.html#method-i-sweep","()",""],["tag","Object","Object.html#method-i-tag","(name)",""],["tag_cloud","TagsHelper","TagsHelper.html#method-i-tag_cloud","(tags, classes)","<p>See the README for an example using tag_cloud.\n"],["tag_count","Stats","Stats.html#method-i-tag_count","()",""],["tag_counts","ActiveRecord::Acts::Taggable::InstanceMethods","ActiveRecord/Acts/Taggable/InstanceMethods.html#method-i-tag_counts","(options = {})","<p>Calculate the tag counts for the tags used by this model.\n<p>The possible options are the same as the tag_counts …\n"],["tag_counts","ActiveRecord::Acts::Taggable::SingletonMethods","ActiveRecord/Acts/Taggable/SingletonMethods.html#method-i-tag_counts","(options = {})","<p>Calculate the tag counts for all tags.\n<p>See Tag.counts for available options.\n"],["tag_list","ActiveRecord::Acts::Taggable::InstanceMethods","ActiveRecord/Acts/Taggable/InstanceMethods.html#method-i-tag_list","()",""],["tag_list=","ActiveRecord::Acts::Taggable::InstanceMethods","ActiveRecord/Acts/Taggable/InstanceMethods.html#method-i-tag_list-3D","(value)",""],["tag_list=","Post","Post.html#method-i-tag_list-3D","(value)","<p>TODO: Contribute this back to acts_as_taggable_on_steroids plugin\n"],["tag_with_html_patch","ActionView::Helpers::TagHelper","ActionView/Helpers/TagHelper.html#method-i-tag_with_html_patch","(name, options = nil, open = true, escape = true)",""],["test_add","TagListTest","TagListTest.html#method-i-test_add","()",""],["test_add_with_parsing","TagListTest","TagListTest.html#method-i-test_add_with_parsing","()",""],["test_all_counts","TagTest","TagTest.html#method-i-test_all_counts","()",""],["test_all_counts_with_array_conditions","TagTest","TagTest.html#method-i-test_all_counts_with_array_conditions","()",""],["test_all_counts_with_hash_conditions","TagTest","TagTest.html#method-i-test_all_counts_with_hash_conditions","()",""],["test_all_counts_with_string_conditions","TagTest","TagTest.html#method-i-test_all_counts_with_string_conditions","()",""],["test_alternative_delimiter","TagListTest","TagListTest.html#method-i-test_alternative_delimiter","()",""],["test_basic_tag_counts_on_class","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_basic_tag_counts_on_class","()",""],["test_cached_tag_list_not_used","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_cached_tag_list_not_used","()",""],["test_cached_tag_list_updated","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_cached_tag_list_updated","()",""],["test_cached_tag_list_used","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_cached_tag_list_used","()",""],["test_case_insensitivity","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_case_insensitivity","()",""],["test_change_case_of_tags","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_change_case_of_tags","()",""],["test_clear_tag_list_with_nil","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_clear_tag_list_with_nil","()",""],["test_clear_tag_list_with_string","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_clear_tag_list_with_string","()",""],["test_clearing_cached_tag_list","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_clearing_cached_tag_list","()",""],["test_default_failure_should_be_a_bad_request","VerificationTest","VerificationTest.html#method-i-test_default_failure_should_be_a_bad_request","()",""],["test_duplicate_tags_removed","TagListTest","TagListTest.html#method-i-test_duplicate_tags_removed","()",""],["test_equality","TagTest","TagTest.html#method-i-test_equality","()",""],["test_find_options_for_find_tagged_with_leaves_arguments_unchanged","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_options_for_find_tagged_with_leaves_arguments_unchanged","()",""],["test_find_options_for_find_tagged_with_no_tags_returns_empty_hash","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_options_for_find_tagged_with_no_tags_returns_empty_hash","()",""],["test_find_options_for_find_tagged_with_respects_custom_table_name","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_options_for_find_tagged_with_respects_custom_table_name","()",""],["test_find_related_tags_with","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_related_tags_with","()",""],["test_find_related_tags_with_non_existent_tags","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_related_tags_with_non_existent_tags","()",""],["test_find_related_tags_with_nothing","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_related_tags_with_nothing","()",""],["test_find_tagged_with","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with","()",""],["test_find_tagged_with_conditions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_conditions","()",""],["test_find_tagged_with_duplicates_options_hash","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_duplicates_options_hash","()",""],["test_find_tagged_with_exclusions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_exclusions","()",""],["test_find_tagged_with_include_and_order","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_include_and_order","()",""],["test_find_tagged_with_match_all","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_match_all","()",""],["test_find_tagged_with_match_all_and_include","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_match_all_and_include","()",""],["test_find_tagged_with_nonexistant_tags","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_nonexistant_tags","()",""],["test_find_tagged_with_nothing","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_nothing","()",""],["test_find_tagged_with_using_sti","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_find_tagged_with_using_sti","()",""],["test_from_and_new_treat_both_accept_arrays","TagListTest","TagListTest.html#method-i-test_from_and_new_treat_both_accept_arrays","()",""],["test_from_blank","TagListTest","TagListTest.html#method-i-test_from_blank","()",""],["test_from_leaves_string_unchanged","TagListTest","TagListTest.html#method-i-test_from_leaves_string_unchanged","()",""],["test_from_multiple_tags","TagListTest","TagListTest.html#method-i-test_from_multiple_tags","()",""],["test_from_multiple_tags_with_quote_and_commas","TagListTest","TagListTest.html#method-i-test_from_multiple_tags_with_quote_and_commas","()",""],["test_from_multiple_tags_with_quotes","TagListTest","TagListTest.html#method-i-test_from_multiple_tags_with_quotes","()",""],["test_from_removes_white_space","TagListTest","TagListTest.html#method-i-test_from_removes_white_space","()",""],["test_from_single_name","TagListTest","TagListTest.html#method-i-test_from_single_name","()",""],["test_from_single_quoted_tag","TagListTest","TagListTest.html#method-i-test_from_single_quoted_tag","()",""],["test_from_with_inner_quotes","TagListTest","TagListTest.html#method-i-test_from_with_inner_quotes","()",""],["test_from_with_single_quotes","TagListTest","TagListTest.html#method-i-test_from_with_single_quotes","()",""],["test_guarded_by_method_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_method_with_prereqs","()",""],["test_guarded_by_method_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_method_without_prereqs","()",""],["test_guarded_by_not_xhr_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_not_xhr_with_prereqs","()",""],["test_guarded_by_not_xhr_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_not_xhr_without_prereqs","()",""],["test_guarded_by_xhr_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_xhr_with_prereqs","()",""],["test_guarded_by_xhr_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_by_xhr_without_prereqs","()",""],["test_guarded_in_session_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_in_session_with_prereqs","()",""],["test_guarded_in_session_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_in_session_without_prereqs","()",""],["test_guarded_one_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_one_with_prereqs","()",""],["test_guarded_one_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_one_without_prereqs","()",""],["test_guarded_post_and_calls_render_fails_and_sets_allow_header","VerificationTest","VerificationTest.html#method-i-test_guarded_post_and_calls_render_fails_and_sets_allow_header","()",""],["test_guarded_post_and_calls_render_succeeds","VerificationTest","VerificationTest.html#method-i-test_guarded_post_and_calls_render_succeeds","()",""],["test_guarded_two_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_two_with_prereqs","()",""],["test_guarded_two_without_prereqs_both","VerificationTest","VerificationTest.html#method-i-test_guarded_two_without_prereqs_both","()",""],["test_guarded_two_without_prereqs_one","VerificationTest","VerificationTest.html#method-i-test_guarded_two_without_prereqs_one","()",""],["test_guarded_two_without_prereqs_two","VerificationTest","VerificationTest.html#method-i-test_guarded_two_without_prereqs_two","()",""],["test_guarded_with_flash_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_with_flash_with_prereqs","()",""],["test_guarded_with_flash_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_guarded_with_flash_without_prereqs","()",""],["test_include_tags_on_find_tagged_with","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_include_tags_on_find_tagged_with","()",""],["test_instance_tag_counts","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_instance_tag_counts","()",""],["test_multi_one_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_multi_one_with_prereqs","()",""],["test_multi_one_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_multi_one_without_prereqs","()",""],["test_multi_two_with_prereqs","VerificationTest","VerificationTest.html#method-i-test_multi_two_with_prereqs","()",""],["test_multi_two_without_prereqs","VerificationTest","VerificationTest.html#method-i-test_multi_two_without_prereqs","()",""],["test_name_required","TagTest","TagTest.html#method-i-test_name_required","()",""],["test_name_unique","TagTest","TagTest.html#method-i-test_name_unique","()",""],["test_new_tags","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_new_tags","()",""],["test_new_with_parsing","TagListTest","TagListTest.html#method-i-test_new_with_parsing","()",""],["test_no_deprecation_warning_for_named_route","VerificationTest","VerificationTest.html#method-i-test_no_deprecation_warning_for_named_route","()",""],["test_reassign_tag_list","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_reassign_tag_list","()",""],["test_remove","TagListTest","TagListTest.html#method-i-test_remove","()",""],["test_remove_and_add_tag","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_remove_and_add_tag","()",""],["test_remove_tag","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_remove_tag","()",""],["test_remove_with_parsing","TagListTest","TagListTest.html#method-i-test_remove_with_parsing","()",""],["test_second_redirect","VerificationTest","VerificationTest.html#method-i-test_second_redirect","()",""],["test_spaces_do_not_delineate","TagListTest","TagListTest.html#method-i-test_spaces_do_not_delineate","()",""],["test_tag","TaggingTest","TaggingTest.html#method-i-test_tag","()",""],["test_tag_cloud","TagsHelperTest","TagsHelperTest.html#method-i-test_tag_cloud","()",""],["test_tag_cloud_when_no_tags","TagsHelperTest","TagsHelperTest.html#method-i-test_tag_cloud_when_no_tags","()",""],["test_tag_counts_duplicates_options_hash","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_duplicates_options_hash","()",""],["test_tag_counts_on_association","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_association","()",""],["test_tag_counts_on_association_with_options","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_association_with_options","()",""],["test_tag_counts_on_class_with_date_conditions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_class_with_date_conditions","()",""],["test_tag_counts_on_class_with_frequencies","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_class_with_frequencies","()",""],["test_tag_counts_on_class_with_frequencies_and_conditions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_class_with_frequencies_and_conditions","()",""],["test_tag_counts_on_has_many_through","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_has_many_through","()",""],["test_tag_counts_on_model_instance","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_model_instance","()",""],["test_tag_counts_on_model_instance_merges_conditions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_model_instance_merges_conditions","()",""],["test_tag_counts_on_model_instance_with_no_tags","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_on_model_instance_with_no_tags","()",""],["test_tag_counts_respects_custom_table_names","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_respects_custom_table_names","()",""],["test_tag_counts_should_sanitize_scope_conditions","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_should_sanitize_scope_conditions","()",""],["test_tag_counts_using_sti","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_using_sti","()",""],["test_tag_counts_with_limit","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_with_limit","()",""],["test_tag_counts_with_limit_and_order","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_counts_with_limit_and_order","()",""],["test_tag_destroyed_when_unused","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_destroyed_when_unused","()",""],["test_tag_list_accessors_on_new_record","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_list_accessors_on_new_record","()",""],["test_tag_list_contents","ActsAsTaggableOnSteroidsFormTest","ActsAsTaggableOnSteroidsFormTest.html#method-i-test_tag_list_contents","()",""],["test_tag_list_populated_when_cache_nil","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_list_populated_when_cache_nil","()",""],["test_tag_list_reader","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_list_reader","()",""],["test_tag_list_reset_on_reload","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_list_reset_on_reload","()",""],["test_tag_not_destroyed_when_unused","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tag_not_destroyed_when_unused","()",""],["test_taggable","TaggingTest","TaggingTest.html#method-i-test_taggable","()",""],["test_taggings","TagTest","TagTest.html#method-i-test_taggings","()",""],["test_taggings_removed_when_tag_destroyed","TagTest","TagTest.html#method-i-test_taggings_removed_when_tag_destroyed","()",""],["test_tags_not_saved_if_validation_fails","ActsAsTaggableOnSteroidsTest","ActsAsTaggableOnSteroidsTest.html#method-i-test_tags_not_saved_if_validation_fails","()",""],["test_to_s","TagTest","TagTest.html#method-i-test_to_s","()",""],["test_to_s_with_alternative_delimiter","TagListTest","TagListTest.html#method-i-test_to_s_with_alternative_delimiter","()",""],["test_to_s_with_commas","TagListTest","TagListTest.html#method-i-test_to_s_with_commas","()",""],["test_toggle","TagListTest","TagListTest.html#method-i-test_toggle","()",""],["test_unguarded_with_params","VerificationTest","VerificationTest.html#method-i-test_unguarded_with_params","()",""],["test_unguarded_without_params","VerificationTest","VerificationTest.html#method-i-test_unguarded_without_params","()",""],["test_using_symbol_back_redirects_to_referrer","VerificationTest","VerificationTest.html#method-i-test_using_symbol_back_redirects_to_referrer","()",""],["test_using_symbol_back_with_no_referrer","VerificationTest","VerificationTest.html#method-i-test_using_symbol_back_with_no_referrer","()",""],["to_s","Tag","Tag.html#method-i-to_s","()",""],["to_s","TagList","TagList.html#method-i-to_s","()","<p>Transform the tag_list into a tag string suitable for edting in a form. The\ntags are joined with <code>TagList.delimiter</code> …\n"],["toggle","TagList","TagList.html#method-i-toggle","(*names)","<p>Toggle the presence of the given tags. If a tag is already in the list it\nis removed, otherwise it is …\n"],["trusted_user?","Comment","Comment.html#method-i-trusted_user-3F","()",""],["two_redirects","VerificationTestController","VerificationTestController.html#method-i-two_redirects","()",""],["unconditional_redirect","VerificationTestController","VerificationTestController.html#method-i-unconditional_redirect","()",""],["undo","Admin::UndoItemsController","Admin/UndoItemsController.html#method-i-undo","()",""],["unguarded","VerificationTestController","VerificationTestController.html#method-i-unguarded","()",""],["unsuccessful?","OpenIdAuthentication::Result","OpenIdAuthentication/Result.html#method-i-unsuccessful-3F","()",""],["up","ActsAsTaggableMigration","ActsAsTaggableMigration.html#method-c-up","()",""],["up","AddIndexes","AddIndexes.html#method-c-up","()",""],["up","AddNameToUsers","AddNameToUsers.html#method-c-up","()",""],["up","AddPaperclipToAttachment","AddPaperclipToAttachment.html#method-c-up","()",""],["up","CreateAttachments","CreateAttachments.html#method-c-up","()",""],["up","DeviseCreateUsers","DeviseCreateUsers.html#method-c-up","()",""],["up","InitializeDb","InitializeDb.html#method-c-up","()",""],["up","RemoveOpenidAuthorityFromComment","RemoveOpenidAuthorityFromComment.html#method-c-up","()",""],["update","Admin::CommentsController","Admin/CommentsController.html#method-i-update","()",""],["update","Admin::PagesController","Admin/PagesController.html#method-i-update","()",""],["update","Admin::PostsController","Admin/PostsController.html#method-i-update","()",""],["user_logged_in?","Comment","Comment.html#method-i-user_logged_in-3F","()",""],["using_open_id?","OpenIdAuthentication","OpenIdAuthentication.html#method-i-using_open_id-3F","(identifier = nil)","<p>The parameter name of “openid_identifier” is used rather than the Rails\nconvention “open_id_identifier …\n"],["valid_comment_attributes","Object","Object.html#method-i-valid_comment_attributes","(extra = {})",""],["valid_page_attributes","Object","Object.html#method-i-valid_page_attributes","()",""],["valid_post_attributes","Object","Object.html#method-i-valid_post_attributes","()",""],["validate_published_at_natural","Post","Post.html#method-i-validate_published_at_natural","()",""],["verify","ActionController::Verification::ClassMethods","ActionController/Verification/ClassMethods.html#method-i-verify","(options={})","<p>Verify the given actions so that if certain prerequisites are not met, the\nuser is redirected to a different …\n"],["verify_authenticity_token_unless_openid","CommentsController","CommentsController.html#method-i-verify_authenticity_token_unless_openid","()",""],["wrap_with_html5_header","BeValidHtml5","BeValidHtml5.html#method-i-wrap_with_html5_header","(fragment)",""],["wrap_with_xhtml_header","BeValidXhtml","BeValidXhtml.html#method-i-wrap_with_xhtml_header","(fragment)",""],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘rails’, ‘3.0.4’\n<p># Bundle edge Rails instead: # gem ‘rails’, :git =&gt; ‘git: …\n"],["LICENSE","","LICENSE.html","","<p>THIS LICENSE MUST ACCOMPANY THIS APPLICATION AT ALL TIMES.\n<p>License follows:\n\n<pre>                   GNU GENERAL ...</pre>\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["Rakefile~","","Rakefile~.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n"],["CHANGELOG","","vendor/plugins/acts_as_taggable_on_steroids/CHANGELOG.html","","<p>11 Jun 09 &mdash; \n<p>Remove deprecated TagCountsExtension.\n<p>Update tests to use foxy fixtures [Jonas Wagner]\n<p>Allow …\n"],["MIT-LICENSE","","vendor/plugins/acts_as_taggable_on_steroids/MIT-LICENSE.html","","<p>Copyright © 2006 Jonathan Viney\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","vendor/plugins/acts_as_taggable_on_steroids/README.html","","<p>acts_as_taggable_on_steroids\n<p>If you find this plugin useful, please consider a donation to show your\nsupport! …\n"],["Rakefile","","vendor/plugins/acts_as_taggable_on_steroids/Rakefile.html","","<p>require ‘rake’ require ‘rake/testtask’ require ‘rake/rdoctask’\n<p>desc ‘Default: run unit tests.’ task :default …\n"],["Rakefile~","","vendor/plugins/acts_as_taggable_on_steroids/Rakefile~.html","","<p>require ‘rake’ require ‘rdoc/testtask’ require ‘rdoc/task’\n<p>desc ‘Default: run unit tests.’ task :default …\n"],["README","","vendor/plugins/exception_notification/README.html","","<p>Exception Notifier Plugin for Rails\n<p>The Exception Notifier plugin provides a mailer object and a default …\n"],["Gemfile","","vendor/plugins/gravatar_image_tag/Gemfile.html","","<p>source :rubygems\n<p>group :development do\n\n<pre>gem 'activesupport'\ngem 'actionpack'\ngem 'jeweler'\ngem 'rspec'</pre>\n"],["MIT-LICENSE","","vendor/plugins/gravatar_image_tag/MIT-LICENSE.html","","<p>Copyright © 2010 Michael Deering\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["Rakefile","","vendor/plugins/gravatar_image_tag/Rakefile.html","","<p>require ‘rake’ require ‘rake/rdoctask’ require\n‘spec/rake/spectask’\n<p>begin\n\n<pre>AUTHOR   = &quot;Michael Deering&quot; ...</pre>\n"],["VERSION","","vendor/plugins/gravatar_image_tag/VERSION.html","","<p>1.0.0\n"],["Gemfile","","vendor/plugins/lesstile/Gemfile.html","","<p>source :rubygems\n<p>gemspec\n"],["History","","vendor/plugins/lesstile/History_txt.html","","<p>0.1 / 2007-12-24\n<p>Initial release. Hooray!\n\n<p>0.2 / 2008-02-08\n"],["LICENSE","","vendor/plugins/lesstile/LICENSE.html","","<p>(The MIT License)\n<p>Copyright © 2007 Xavier Shay\n<p>Permission is hereby granted, free of charge, to any person …\n"],["Manifest","","vendor/plugins/lesstile/Manifest_txt.html","","<p>History.txt Manifest.txt README.txt Rakefile lib/lesstile.rb\nspec/spec_lesstile.rb\n"],["README","","vendor/plugins/lesstile/README_rdoc.html","","<p>Lesstile\n<p>Converts text formatted with an exceedingly simple markup language into\nvalid HTML (iron clad …\n"],["Rakefile","","vendor/plugins/lesstile/Rakefile.html","","<p># RSpec provided helper doesn’t like me, for now just run it myself desc\n“Run specs” task :spec …\n"],["CHANGELOG","","vendor/plugins/open_id_authentication/CHANGELOG.html","","<p>Dump heavy lifting off to rack-openid gem. OpenIdAuthentication is just a\nsimple controller concern. …\n"],["README","","vendor/plugins/open_id_authentication/README.html","","<p>OpenIdAuthentication\n<p>\n<p>Provides a thin wrapper around the excellent ruby-openid gem from JanRan.\nBe sure …\n"],["MIT-LICENSE","","vendor/plugins/verification/MIT-LICENSE.html","","<p>Copyright © 2010 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any person …\n"],["README","","vendor/plugins/verification/README.html","","<p>This module provides a class-level method for specifying that certain\nactions are guarded against being …\n"],["Rakefile","","vendor/plugins/verification/Rakefile.html","","<p>require ‘rake’ require ‘rake/testtask’ require ‘rake/rdoctask’\n<p>desc ‘Default: run unit tests.’ task :default …\n"],["Rakefile~","","vendor/plugins/verification/Rakefile~.html","","<p>require ‘rake’ require ‘rake/testtask’ require ‘rdoc/task’\n<p>desc ‘Default: run unit tests.’ task :default …\n"]],"searchIndex":["ability","actioncontroller","testcase","verification","classmethods","actionview","helpers","taghelper","activerecord","acts","taggable","classmethods","instancemethods","singletonmethods","activesupport","actsastaggablemigration","actsastaggablemigrationgenerator","actsastaggableonsteroidsformtest","actsastaggableonsteroidstest","addindexes","addnametousers","addpapercliptoattachment","admin","basecontroller","commentscontroller","dashboardcontroller","healthcontroller","navigationhelper","pagescontroller","postscontroller","sessionscontroller","undoitemscontroller","applicationcontroller","applicationhelper","archivescontroller","attachment","bevalidhtml5","bevalidxhtml","comment","commentactivity","commentscontroller","coreextensions","object","string","createattachments","datehelper","deletecommentundo","deletepageundo","deletepostundo","devisecreateusers","disableflashsweeping","enki","application","config","enkiformatter","exceptionnotifier","notifier","missingcontroller","formhelper","gravatarimagetag","classmethods","configuration","instancemethods","initializedb","lesstile","magazine","navigationhelper","navigationhelpers","object","openidauthentication","result","page","pagetitlehelper","pagescontroller","photo","post","postscontroller","postshelper","removeopenidauthorityfromcomment","specialphoto","specialpost","stats","subscription","tag","taghelper","taglist","taglisttest","tagtest","taggingtest","tagshelper","tagshelpertest","tokenauthenticationscontroller","undofailed","undoitem","urlhelper","user","userhelper","verificationtest","verificationtestcontroller","==()","[]()","[]()","active?()","acts_as_taggable()","add()","admin_form_for()","allow_login_bypass?()","apply_filter()","apply_filter()","apply_filter()","approved?()","archives_title()","authenticate_with_open_id()","author()","author_link()","author_open_ids()","basic_read_only()","be_valid_html5()","be_valid_html5_fragment()","be_valid_xhtml()","be_valid_xhtml_fragment()","blank_openid_fields()","build_for_preview()","build_for_preview()","build_for_preview()","cached_tag_list_column_name()","caching_tag_list?()","call()","category_links_for_navigation()","class_for_tab()","comment_count()","comments()","complete_description()","complete_description()","complete_description()","configure()","count()","counts()","create()","create()","create()","create()","create_undo()","create_undo()","create_undo()","default()","default_email_prefix()","default_exception_recipients()","default_gravatar_filetype=()","default_gravatar_image=()","default_gravatar_rating=()","default_gravatar_size=()","default_ignore_exceptions()","default_location()","default_options()","default_options()","default_sections()","default_sender_address()","delete_empty_attachment()","denormalize()","denormalize_comments_count!()","description()","description()","description()","description()","description()","destroy()","destroy()","destroy()","destroy()","destroy_with_undo()","destroy_with_undo()","destroy_with_undo()","do_delete()","do_get()","do_post()","do_put()","down()","down()","down()","down()","down()","down()","down()","down()","enki_config()","enki_config()","exception_notification()","execute_with_counting()","failure_message()","failure_message()","file_name()","find_all_grouped_by_month()","find_by_permalink()","find_comment()","find_options_for_find_tagged_with()","find_options_for_tag_counts()","find_or_create_with_like_by_name()","find_page()","find_post()","find_post()","find_recent()","find_recent()","find_recent()","find_related_tags()","find_tagged_with()","format_as_html()","format_as_xhtml()","format_as_xhtml()","format_comment_date()","format_comment_error()","format_month()","format_post_date()","generate_exception()","generate_slug()","generate_slug()","gravatar_image_tag()","gravatar_url()","guarded_by_method()","guarded_by_not_xhr()","guarded_by_xhr()","guarded_in_session()","guarded_one()","guarded_one_for_named_route_test()","guarded_two()","guarded_with_back()","guarded_with_flash()","html_title()","included()","index()","index()","index()","index()","index()","index()","index()","index()","joins_for_match_all_tags()","linked_tag_list()","loaded_data()","loaded_data()","loaded_data()","manifest()","matches?()","matches?()","message()","method_missing()","minor_edit?()","mock_post!()","month()","more_content?()","most_recent_comment()","multi_one()","multi_two()","must_be_post()","nav_link_to()","negative_failure_message()","negative_failure_message()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_with_filter()","no_default_action()","oldcreate()","open_id_delegation_link_tags()","open_id_error_should_be_blank()","options_for_counts()","page_links_for_navigation()","page_title()","path_to()","post_comments_path()","post_count()","post_path()","post_title()","post_title()","posts_title()","preview()","preview()","process!()","process!()","process!()","process!()","protected_attribute?()","published?()","recent_comments_for_navigation()","remove()","require_login()","requires_openid_authentication?()","save_cached_tag_list()","save_tags()","secure_gravatar=()","send_with_default()","set_cached_tag_list_column_name()","set_comment_attributes()","set_content_type()","set_dates()","show()","show()","show()","show()","show()","show()","show_user()","slugorize()","slugorize!()","status()","store()","store=()","stub_open_id_authenticate()","successful?()","successful_login()","sweep()","tag()","tag_cloud()","tag_count()","tag_counts()","tag_counts()","tag_list()","tag_list=()","tag_list=()","tag_with_html_patch()","test_add()","test_add_with_parsing()","test_all_counts()","test_all_counts_with_array_conditions()","test_all_counts_with_hash_conditions()","test_all_counts_with_string_conditions()","test_alternative_delimiter()","test_basic_tag_counts_on_class()","test_cached_tag_list_not_used()","test_cached_tag_list_updated()","test_cached_tag_list_used()","test_case_insensitivity()","test_change_case_of_tags()","test_clear_tag_list_with_nil()","test_clear_tag_list_with_string()","test_clearing_cached_tag_list()","test_default_failure_should_be_a_bad_request()","test_duplicate_tags_removed()","test_equality()","test_find_options_for_find_tagged_with_leaves_arguments_unchanged()","test_find_options_for_find_tagged_with_no_tags_returns_empty_hash()","test_find_options_for_find_tagged_with_respects_custom_table_name()","test_find_related_tags_with()","test_find_related_tags_with_non_existent_tags()","test_find_related_tags_with_nothing()","test_find_tagged_with()","test_find_tagged_with_conditions()","test_find_tagged_with_duplicates_options_hash()","test_find_tagged_with_exclusions()","test_find_tagged_with_include_and_order()","test_find_tagged_with_match_all()","test_find_tagged_with_match_all_and_include()","test_find_tagged_with_nonexistant_tags()","test_find_tagged_with_nothing()","test_find_tagged_with_using_sti()","test_from_and_new_treat_both_accept_arrays()","test_from_blank()","test_from_leaves_string_unchanged()","test_from_multiple_tags()","test_from_multiple_tags_with_quote_and_commas()","test_from_multiple_tags_with_quotes()","test_from_removes_white_space()","test_from_single_name()","test_from_single_quoted_tag()","test_from_with_inner_quotes()","test_from_with_single_quotes()","test_guarded_by_method_with_prereqs()","test_guarded_by_method_without_prereqs()","test_guarded_by_not_xhr_with_prereqs()","test_guarded_by_not_xhr_without_prereqs()","test_guarded_by_xhr_with_prereqs()","test_guarded_by_xhr_without_prereqs()","test_guarded_in_session_with_prereqs()","test_guarded_in_session_without_prereqs()","test_guarded_one_with_prereqs()","test_guarded_one_without_prereqs()","test_guarded_post_and_calls_render_fails_and_sets_allow_header()","test_guarded_post_and_calls_render_succeeds()","test_guarded_two_with_prereqs()","test_guarded_two_without_prereqs_both()","test_guarded_two_without_prereqs_one()","test_guarded_two_without_prereqs_two()","test_guarded_with_flash_with_prereqs()","test_guarded_with_flash_without_prereqs()","test_include_tags_on_find_tagged_with()","test_instance_tag_counts()","test_multi_one_with_prereqs()","test_multi_one_without_prereqs()","test_multi_two_with_prereqs()","test_multi_two_without_prereqs()","test_name_required()","test_name_unique()","test_new_tags()","test_new_with_parsing()","test_no_deprecation_warning_for_named_route()","test_reassign_tag_list()","test_remove()","test_remove_and_add_tag()","test_remove_tag()","test_remove_with_parsing()","test_second_redirect()","test_spaces_do_not_delineate()","test_tag()","test_tag_cloud()","test_tag_cloud_when_no_tags()","test_tag_counts_duplicates_options_hash()","test_tag_counts_on_association()","test_tag_counts_on_association_with_options()","test_tag_counts_on_class_with_date_conditions()","test_tag_counts_on_class_with_frequencies()","test_tag_counts_on_class_with_frequencies_and_conditions()","test_tag_counts_on_has_many_through()","test_tag_counts_on_model_instance()","test_tag_counts_on_model_instance_merges_conditions()","test_tag_counts_on_model_instance_with_no_tags()","test_tag_counts_respects_custom_table_names()","test_tag_counts_should_sanitize_scope_conditions()","test_tag_counts_using_sti()","test_tag_counts_with_limit()","test_tag_counts_with_limit_and_order()","test_tag_destroyed_when_unused()","test_tag_list_accessors_on_new_record()","test_tag_list_contents()","test_tag_list_populated_when_cache_nil()","test_tag_list_reader()","test_tag_list_reset_on_reload()","test_tag_not_destroyed_when_unused()","test_taggable()","test_taggings()","test_taggings_removed_when_tag_destroyed()","test_tags_not_saved_if_validation_fails()","test_to_s()","test_to_s_with_alternative_delimiter()","test_to_s_with_commas()","test_toggle()","test_unguarded_with_params()","test_unguarded_without_params()","test_using_symbol_back_redirects_to_referrer()","test_using_symbol_back_with_no_referrer()","to_s()","to_s()","toggle()","trusted_user?()","two_redirects()","unconditional_redirect()","undo()","unguarded()","unsuccessful?()","up()","up()","up()","up()","up()","up()","up()","up()","update()","update()","update()","user_logged_in?()","using_open_id?()","valid_comment_attributes()","valid_page_attributes()","valid_post_attributes()","validate_published_at_natural()","verify()","verify_authenticity_token_unless_openid()","wrap_with_html5_header()","wrap_with_xhtml_header()","gemfile","license","rakefile","rakefile~","robots","changelog","mit-license","readme","rakefile","rakefile~","readme","gemfile","mit-license","rakefile","version","gemfile","history","license","manifest","readme","rakefile","changelog","readme","mit-license","readme","rakefile","rakefile~"]}}