h2. Install passenger and apache2

**if you are rvm user the sudo is not need,and you must care about the PassengerRuby and PassengerRoot in "enki_apache_passanger.conf" file**,and you will see when passenger-install-apache2-module installed,for example 

<code>   LoadModule passenger_module /usr/share/ruby-rvm/gems/ruby-1.8.7-p357/gems/passenger-3.0.11/ext/apache2/mod_passenger.so
   PassengerRoot /usr/share/ruby-rvm/gems/ruby-1.8.7-p357/gems/passenger-3.0.11
   PassengerRuby /usr/share/ruby-rvm/rubies/ruby-1.8.7-p357/bin/ruby
</code>

<pre><code>sudo apt-get install apache2
sudo gem install passenger
#type follow
passenger-install-apache2-module
sudo apt-get install apache2-prefork-dev libapr1-dev libaprutil1-dev
sudo passenger-install-apache2-module
</code></pre>

h2. Get the enki

You can by pass git clone git://github.com/jhjguxin/enki.git
because I have No mails server,so I enable below:
<pre><code>  # Disable delivery errors, bad email addresses will be ignored
   config.action_mailer.raise_delivery_errors = false
</code></pre>
Otherwise You will get:
<code>Errno::ECONNREFUSED Connection refused - connect(2)</code>
Creat the db file for produce environmention
<pre><code>rake db:migrate RAILS_ENV=production</code></pre>
If everything is ok,mv the enki folder to /var/www/
<pre><code>sudo mv mv -Rf enki /var/www</code></pre>

h2. Create the Conf file for apache

Create the file named "enki_apache_passenger.conf" in enki's root.And follew inside
<pre><code>
LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-3.0.11/ext/apache2/mod_passenger.so
LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-3.0.11
PassengerRuby /usr/bin/ruby1.8
#PassengerMaxPoolSize 10
<VirtualHost *:8088>
   #ServerName www.yourhost.com
   #<-- be sure to point to 'public'!
   DocumentRoot /var/www/enki/public
   RewriteEngine On 
   <Directory /var/www/enki/public>
      #<-- relax Apache security settings
      AllowOverride all
      #<-- MultiViews must be turned off
      Options -MultiViews
   </Directory>
</VirtualHost>
</code></pre>
In /ect/apache2/httpd.conf add:
<pre><code>Include /var/www/enki/enki_apache_passenger.conf</code></pre>
In /ect/apache2/ports.conf add:
<pre><code>NameVirtualHost *:8088
Listen 8088
</code></pre>

h2. Tweak your file/folder permissions

You may also need to tweak your file/folder permissions. Make sure that the following folders are readable and executable by Apache:
 * this public folder.
 * the applicationâ€™s config folder.
 * all parent folders. That is, /webapps/mycook and /webapps must also be readable and executable by Apache.

the easiest way is type:
<pre><code>sudo chown www-data:www-data -Rf /var/www/enki</code></pre>

h2. rails+solr+apache+production

<pre><code>
jhjguxin@jhjguxin-virtual-machine:/var/www/enki$ sudo gem install sunspot_solr
Successfully installed escape-0.0.4
Successfully installed sunspot_solr-1.3.0
2 gems installed
Installing ri documentation for escape-0.0.4...
Installing ri documentation for sunspot_solr-1.3.0...
Installing RDoc documentation for escape-0.0.4...
Installing RDoc documentation for sunspot_solr-1.3.0...
jhjguxin@jhjguxin-virtual-machine:/var/www/enki$ sudo sunspot-solr start -- -p 8983 -d solr/data/
[sudo] password for jhjguxin: 
java version "1.6.0_23"
OpenJDK Runtime Environment (IcedTea6 1.11pre) (6b23~pre11-0ubuntu1.11.10.1)
OpenJDK Client VM (build 20.0-b11, mixed mode, sharing)
</code></pre>


h2. Enjoy It!

<pre><code>sudo apachectl start
#Or
sudo apachectl -k restart
</code></pre>
